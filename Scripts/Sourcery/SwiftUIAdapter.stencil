{% for type in types.protocols where type.name|hasSuffix:"Output" %}
// sourcery:file:{{ type.path|dirname }}/Generated/{{ type.name }}SwiftUIAdapter.swift
// Generated by Sourcery

import SwiftUI

public class {{ type.name }}SwiftUIAdapter: ObservableObject, {{ type.name }} {
    {% for variable in type.variables %}
        {% if variable.isOptional %}
        @Published public var {{ variable.name }}: {{ variable.typeName }} = nil
        {% else %}
        @Published public var {{ variable.name }}: {{ variable.typeName }}
        {% endif %}
    {% endfor %}

    public init(
        {% for variable in type.variables %}
            {% if !variable.isOptional %}
            {{ variable.name }}: {{ variable.typeName }}
            {% endif %}
        {% endfor %}
    ) {
        {% for variable in type.variables %}
            {% if !variable.isOptional %}
            self.{{ variable.name }} = {{ variable.name }}
            {% endif %}
        {% endfor %}
    }

    {% for method in type.methods %}
    {% if method.isStatic %}
    // Static methods cannot be generated for generic T. Implement this in specific types.
    {% else %}
    public func {{ method.name }} {
        // TODO
    }
    {% endif %}
    {% endfor %}
}

// sourcery:end
// sourcery:endfile
{% endfor %}
