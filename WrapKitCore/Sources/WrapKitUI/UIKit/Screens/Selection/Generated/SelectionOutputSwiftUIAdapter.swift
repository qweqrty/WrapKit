// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT
// Generated by Sourcery
// swiftlint:disable:this file_name
// swiftlint:disable all
// swift-format-ignore-file
// swiftformat:disable all

import SwiftUI
public class SelectionOutputSwiftUIAdapter: ObservableObject, SelectionOutput {

    // Initializer
    public init(
    ) {
    }

    @Published public var displayItemsSelectedCountTitleState: DisplayItemsSelectedCountTitleState? = nil
    public struct DisplayItemsSelectedCountTitleState {
        public let items: [SelectionType.SelectionCellPresentableModel]
        public let selectedCountTitle: String
    }
    public func display(items: [SelectionType.SelectionCellPresentableModel], selectedCountTitle: String) {
        displayItemsSelectedCountTitleState = .init(
            items: items, 
            selectedCountTitle: selectedCountTitle
        )
    }
    @Published public var displayTitleState: DisplayTitleState? = nil
    public struct DisplayTitleState {
        public let title: String?
    }
    public func display(title: String?) {
        displayTitleState = .init(
            title: title
        )
    }
    @Published public var displayShouldShowSearchBarState: DisplayShouldShowSearchBarState? = nil
    public struct DisplayShouldShowSearchBarState {
        public let shouldShowSearchBar: Bool
    }
    public func display(shouldShowSearchBar: Bool) {
        displayShouldShowSearchBarState = .init(
            shouldShowSearchBar: shouldShowSearchBar
        )
    }
    @Published public var displayCanResetState: DisplayCanResetState? = nil
    public struct DisplayCanResetState {
        public let canReset: Bool
    }
    public func display(canReset: Bool) {
        displayCanResetState = .init(
            canReset: canReset
        )
    }
    @Published public var displayModelState: DisplayModelState? = nil
    public struct DisplayModelState {
        public let model: EmptyViewPresentableModel?
    }
    public func display(model: EmptyViewPresentableModel?) {
        displayModelState = .init(
            model: model
        )
    }
}
