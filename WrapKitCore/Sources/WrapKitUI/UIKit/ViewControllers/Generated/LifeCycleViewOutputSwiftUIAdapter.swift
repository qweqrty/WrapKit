// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT
// Generated by Sourcery

import SwiftUI
public class LifeCycleViewOutputSwiftUIAdapter: ObservableObject, LifeCycleViewOutput {

    // Initializer
    public init(
    ) {
    }

    @Published public var viewDidLoadState: ViewDidLoadState? = nil
    public struct ViewDidLoadState {
    }
    public func viewDidLoad() {
        viewDidLoadState = .init(
        )
    }
    @Published public var viewWillAppearState: ViewWillAppearState? = nil
    public struct ViewWillAppearState {
    }
    public func viewWillAppear() {
        viewWillAppearState = .init(
        )
    }
    @Published public var viewWillDisappearState: ViewWillDisappearState? = nil
    public struct ViewWillDisappearState {
    }
    public func viewWillDisappear() {
        viewWillDisappearState = .init(
        )
    }
    @Published public var viewDidAppearState: ViewDidAppearState? = nil
    public struct ViewDidAppearState {
    }
    public func viewDidAppear() {
        viewDidAppearState = .init(
        )
    }
    @Published public var viewDidDisappearState: ViewDidDisappearState? = nil
    public struct ViewDidDisappearState {
    }
    public func viewDidDisappear() {
        viewDidDisappearState = .init(
        )
    }
    @Published public var composedOutputState: ComposedOutputState? = nil
    public struct ComposedOutputState {
        public let output: LifeCycleViewOutput
    }
    public func composed(with output: LifeCycleViewOutput) {
        composedOutputState = .init(
            output: output
        )
    }
    @Published public var withAnalyticsScreenNameAnalyticsState: WithAnalyticsScreenNameAnalyticsState? = nil
    public struct WithAnalyticsScreenNameAnalyticsState {
        public let screenName: String
        public let analytics: AnalyticsTracker
    }
    public func withAnalytics(screenName: String, analytics: AnalyticsTracker) {
        withAnalyticsScreenNameAnalyticsState = .init(
            screenName: screenName, 
            analytics: analytics
        )
    }
}
