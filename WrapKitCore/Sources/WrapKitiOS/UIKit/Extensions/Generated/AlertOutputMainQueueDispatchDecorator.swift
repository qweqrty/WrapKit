// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import UIKit

extension MainQueueDispatchDecorator: AlertOutput where T == AlertOutput {
    public func showAlert(title: String?, text: String?, actions: [AlertAction], cancelText: String?) {
        dispatch { [weak self] in
            self?.decoratee.showAlert(title: title, text: text, actions: actions, cancelText: cancelText)
        }
    }
    public func showActionSheet(title: String?, text: String?, actions: [AlertAction], cancelText: String?) {
        dispatch { [weak self] in
            self?.decoratee.showActionSheet(title: title, text: text, actions: actions, cancelText: cancelText)
        }
    }

}

extension AlertOutput {
    public var mainQueueDispatched: AlertOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension AlertOutput {
    public var weakReferenced: AlertOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: AlertOutput where T: AlertOutput {
    public func showAlert(title: String?, text: String?, actions: [AlertAction], cancelText: String?) {
        object?.showAlert(title: title, text: text, actions: actions, cancelText: cancelText)
    }
    public func showActionSheet(title: String?, text: String?, actions: [AlertAction], cancelText: String?) {
        object?.showActionSheet(title: title, text: text, actions: actions, cancelText: cancelText)
    }

}
