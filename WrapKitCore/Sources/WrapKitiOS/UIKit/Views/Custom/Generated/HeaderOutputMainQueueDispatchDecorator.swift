// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import Foundation

extension MainQueueDispatchDecorator: HeaderOutput where T: HeaderOutput {

    public func display(model: HeaderPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(model: model)
        }
    }
    public func display(keyTitle: [TextAttributes]) {
        dispatch { [weak self] in
            self?.decoratee.display(keyTitle: keyTitle)
        }
    }
    public func display(valueTitle: [TextAttributes]) {
        dispatch { [weak self] in
            self?.decoratee.display(valueTitle: valueTitle)
        }
    }
    public func display(leadingImage: ImageViewPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(leadingImage: leadingImage)
        }
    }
    public func display(primeTrailingImage: ImageViewPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(primeTrailingImage: primeTrailingImage)
        }
    }
    public func display(secondaryTrailingImage: ImageViewPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(secondaryTrailingImage: secondaryTrailingImage)
        }
    }
    public func display(tertiaryTrailingImage: ImageViewPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(tertiaryTrailingImage: tertiaryTrailingImage)
        }
    }

}

extension HeaderOutput {
    public var mainQueueDispatched: any HeaderOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension HeaderOutput {
    public var weakReferenced: any HeaderOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: HeaderOutput where T: HeaderOutput {

    public func display(model: HeaderPresentableModel?) {
        object?.display(model: model)
    }
    public func display(keyTitle: [TextAttributes]) {
        object?.display(keyTitle: keyTitle)
    }
    public func display(valueTitle: [TextAttributes]) {
        object?.display(valueTitle: valueTitle)
    }
    public func display(leadingImage: ImageViewPresentableModel?) {
        object?.display(leadingImage: leadingImage)
    }
    public func display(primeTrailingImage: ImageViewPresentableModel?) {
        object?.display(primeTrailingImage: primeTrailingImage)
    }
    public func display(secondaryTrailingImage: ImageViewPresentableModel?) {
        object?.display(secondaryTrailingImage: secondaryTrailingImage)
    }
    public func display(tertiaryTrailingImage: ImageViewPresentableModel?) {
        object?.display(tertiaryTrailingImage: tertiaryTrailingImage)
    }

}
