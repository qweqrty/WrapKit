// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import Foundation

extension MainQueueDispatchDecorator: TitledOutput where T: TitledOutput {
    public typealias ContentView = T.ContentView

    public func display(model: TitledViewPresentableModel<ContentView>?) {
        dispatch { [weak self] in
            self?.decoratee.display(model: model)
        }
    }

}

extension TitledOutput {
    public var mainQueueDispatched: any TitledOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension TitledOutput {
    public var weakReferenced: any TitledOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: TitledOutput where T: TitledOutput {
    public typealias ContentView = T.ContentView

    public func display(model: TitledViewPresentableModel<ContentView>?) {
        object?.display(model: model)
    }

}
