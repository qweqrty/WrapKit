// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import UIKit
import SwiftUI

extension MainQueueDispatchDecorator: TitledOutput where T == TitledOutput {
    public func display(contentView: ContentView) {
        dispatch { [weak self] in
            self?.decoratee.display(contentView: contentView)
        }
    }
    public func display(keyTitle: [TextAttributes]) {
        dispatch { [weak self] in
            self?.decoratee.display(keyTitle: keyTitle)
        }
    }
    public func display(valueTitle: [TextAttributes]) {
        dispatch { [weak self] in
            self?.decoratee.display(valueTitle: valueTitle)
        }
    }
}

extension TitledOutput {
    public var mainQueueDispatched: TitledOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension TitledOutput {
    public var weakReferenced: TitledOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: TitledOutput where T: TitledOutput {
    public func display(contentView: ContentView) {
        object?.display(contentView: contentView)
    }
    public func display(keyTitle: [TextAttributes]) {
        object?.display(keyTitle: keyTitle)
    }
    public func display(valueTitle: [TextAttributes]) {
        object?.display(valueTitle: valueTitle)
    }

}
