// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import Foundation
import UIKit
import Combine

extension MainQueueDispatchDecorator: ExpandableCardViewOutput where T == ExpandableCardViewOutput {
    public func display(model: Pair<CardViewPresentableModel, CardViewPresentableModel?>) {
        dispatch { [weak self] in
            self?.decoratee.display(model: model)
        }
    }

}

extension ExpandableCardViewOutput {
    public var mainQueueDispatched: ExpandableCardViewOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension ExpandableCardViewOutput {
    public var weakReferenced: ExpandableCardViewOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: ExpandableCardViewOutput where T: ExpandableCardViewOutput {
    public func display(model: Pair<CardViewPresentableModel, CardViewPresentableModel?>) {
        object?.display(model: model)
    }

}
