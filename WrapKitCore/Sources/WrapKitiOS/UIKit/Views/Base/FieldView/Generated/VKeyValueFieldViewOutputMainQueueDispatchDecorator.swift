// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import Foundation

extension MainQueueDispatchDecorator: VKeyValueFieldViewOutput where T: VKeyValueFieldViewOutput {

    public func display(model: Pair<TextOutputPresentableModel?, TextOutputPresentableModel?>) {
        dispatch { [weak self] in
            self?.decoratee.display(model: model)
        }
    }
    public func display(keyTitle: TextOutputPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(keyTitle: keyTitle)
        }
    }
    public func display(valueTitle: TextOutputPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(valueTitle: valueTitle)
        }
    }

}

extension VKeyValueFieldViewOutput {
    public var mainQueueDispatched: any VKeyValueFieldViewOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension VKeyValueFieldViewOutput {
    public var weakReferenced: any VKeyValueFieldViewOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: VKeyValueFieldViewOutput where T: VKeyValueFieldViewOutput {

    public func display(model: Pair<TextOutputPresentableModel?, TextOutputPresentableModel?>) {
        object?.display(model: model)
    }
    public func display(keyTitle: TextOutputPresentableModel?) {
        object?.display(keyTitle: keyTitle)
    }
    public func display(valueTitle: TextOutputPresentableModel?) {
        object?.display(valueTitle: valueTitle)
    }

}
