// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import Foundation

extension MainQueueDispatchDecorator: ImageViewOutput where T: ImageViewOutput {

    public func display(model: ImageViewPresentableModel?) {
        dispatch { [weak self] in
            self?.decoratee.display(model: model)
        }
    }
    public func display(image: ImageEnum?) {
        dispatch { [weak self] in
            self?.decoratee.display(image: image)
        }
    }
    public func display(size: CGSize?) {
        dispatch { [weak self] in
            self?.decoratee.display(size: size)
        }
    }
    public func display(onPress: (() -> Void)?) {
        dispatch { [weak self] in
            self?.decoratee.display(onPress: onPress)
        }
    }
    public func display(onLongPress: (() -> Void)?) {
        dispatch { [weak self] in
            self?.decoratee.display(onLongPress: onLongPress)
        }
    }
    public func display(contentModeIsFit: Bool) {
        dispatch { [weak self] in
            self?.decoratee.display(contentModeIsFit: contentModeIsFit)
        }
    }

}

extension ImageViewOutput {
    public var mainQueueDispatched: any ImageViewOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension ImageViewOutput {
    public var weakReferenced: any ImageViewOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: ImageViewOutput where T: ImageViewOutput {

    public func display(model: ImageViewPresentableModel?) {
        object?.display(model: model)
    }
    public func display(image: ImageEnum?) {
        object?.display(image: image)
    }
    public func display(size: CGSize?) {
        object?.display(size: size)
    }
    public func display(onPress: (() -> Void)?) {
        object?.display(onPress: onPress)
    }
    public func display(onLongPress: (() -> Void)?) {
        object?.display(onLongPress: onLongPress)
    }
    public func display(contentModeIsFit: Bool) {
        object?.display(contentModeIsFit: contentModeIsFit)
    }

}
