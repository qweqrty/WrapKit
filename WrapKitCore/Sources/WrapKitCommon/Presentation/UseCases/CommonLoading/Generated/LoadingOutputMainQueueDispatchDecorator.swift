// Generated using Sourcery 2.2.5 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// Generated by Sourcery

import Foundation

extension MainQueueDispatchDecorator: LoadingOutput where T: LoadingOutput {

    public func display(isLoading: Bool) {
        dispatch { [weak self] in
            self?.decoratee.display(isLoading: isLoading)
        }
    }
    // Static methods cannot be generated for generic T. Implement this in specific types.

    public var isLoading: Bool? {
        get {
            return DispatchQueue.main.sync {
                return self.decoratee.isLoading
            }
        }
        set {
            dispatch { [weak self] in
                self?.decoratee.isLoading = newValue
            }
        }
    }
}

extension LoadingOutput {
    public var mainQueueDispatched: any LoadingOutput {
        MainQueueDispatchDecorator(decoratee: self)
    }
}

extension LoadingOutput {
    public var weakReferenced: any LoadingOutput {
        return WeakRefVirtualProxy(self)
    }
}

extension WeakRefVirtualProxy: LoadingOutput where T: LoadingOutput {

    public func display(isLoading: Bool) {
        object?.display(isLoading: isLoading)
    }
    // Static methods cannot be generated for generic T. Implement this in specific types.

    public var isLoading: Bool? {
        get { return object?.isLoading }
        set { object?.isLoading = newValue }
    }
}
